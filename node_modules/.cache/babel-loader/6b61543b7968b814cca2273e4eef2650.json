{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useCallback } from 'react';\nimport './map.scss';\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport DirectionsRender from \"../DirectionsRender/DirectionsRender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  Width: '100wh',\n  height: '100vh'\n};\n\nconst Map = () => {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const [coordinates, setCoordinates] = useState(null);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const onMapClick = useCallback(event => {\n    setCoordinates(coordinates => event.latLng.toJSON());\n    setMarkers(markers => /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this));\n  }, []);\n  const [markers, setMarkers] = useState([]);\n  console.log(coordinates);\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: onMapClick,\n      children: [/*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), markers, /*#__PURE__*/_jsxDEV(DirectionsRender, {\n        center: center,\n        coordinates: coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n};\n\n_s(Map, \"DoWsbb2hcgYPnBgd24MJjjt8B7I=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","useCallback","GoogleMap","Marker","useLoadScript","PolygonMkad","DirectionsRender","containerStyle","Width","height","Map","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","coordinates","setCoordinates","isLoaded","googleMapsApiKey","onMapClick","event","latLng","toJSON","setMarkers","markers","console","log","renderMap","map","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,aAA3B,QAA+C,wBAA/C;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;;AAMA,MAAOC,GAAG,GAAG,MAAM;AAAA;;AAEf,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AAACe,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBlB,QAAQ,CAAC,EAAD,CAA/B;AAGA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAA+BpB,QAAQ,CAAC,IAAD,CAA7C;AAEA,QAAM;AAAEqB,IAAAA;AAAF,MAAejB,aAAa,CAAC;AAC/BkB,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAMC,UAAU,GAAGtB,WAAW,CAAEuB,KAAD,IAAW;AAClCJ,IAAAA,cAAc,CAACD,WAAW,IAAIK,KAAK,CAACC,MAAN,CAAaC,MAAb,EAAhB,CAAd;AACAC,IAAAA,UAAU,CAACC,OAAO,iBACV,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAET;AAAlB;AAAA;AAAA;AAAA;AAAA,YADE,CAAV;AAIP,GAN6B,EAM3B,EAN2B,CAA9B;AAQA,QAAM,CAAES,OAAF,EAAWD,UAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AAEA6B,EAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;;AAEA,QAAMY,SAAS,GAAG,mBACd;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAElB,MADZ;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,iBAAiB,EAAEV,cAHvB;AAII,MAAA,MAAM,EAAEyB,GAAG,IAAIpB,QAAQ,CAACoB,GAAD,CAJ3B;AAKI,MAAA,OAAO,EAAET,UALb;AAAA,8BAOI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQIK,OARJ,eASI,QAAC,gBAAD;AACI,QAAA,MAAM,EAAEf,MADZ;AAEI,QAAA,WAAW,EAAGM;AAFlB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAmBA,SAAOE,QAAQ,GAAGU,SAAS,EAAZ,GAAiB,IAAhC;AAEH,CA9CD;;GAAOrB,G;UASkBN,a;;;KATlBM,G;AAkDP,kCAAeX,KAAK,CAACkC,IAAN,CAAWvB,GAAX,CAAf","sourcesContent":["import React from 'react'\nimport {useState, useCallback} from 'react'\n\nimport './map.scss'\n\nimport {GoogleMap, Marker, useLoadScript} from '@react-google-maps/api';\n\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport DirectionsRender from \"../DirectionsRender/DirectionsRender\";\n\nconst containerStyle = {\n    Width: '100wh',\n    height: '100vh'\n}\n\n\nconst  Map = () => {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n\n    const [coordinates, setCoordinates] =useState(null)\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const onMapClick = useCallback((event) => {\n            setCoordinates(coordinates => event.latLng.toJSON());\n            setMarkers(markers => (\n                    <Marker position={coordinates}/>\n                )\n            )\n    }, [])\n\n    const [ markers, setMarkers ] = useState([]);\n\n    console.log(coordinates)\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={onMapClick}\n            >\n                <PolygonMkad/>\n               {markers}\n                <DirectionsRender\n                    center={center}\n                    coordinates ={coordinates}\n                />\n            </GoogleMap>\n        </div>\n)\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default React.memo(Map)\n\n\n"]},"metadata":{},"sourceType":"module"}