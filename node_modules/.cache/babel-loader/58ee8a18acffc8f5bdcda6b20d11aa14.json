{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/DirectionsRender/DirectionsRender.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleMap, DirectionsService, DirectionsRenderer } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 0,\n  lng: -180\n};\n\nfunction ExampleDirections({\n  styles\n}) {\n  _s();\n\n  const [response, setResponse] = React.useState(null);\n  const [travelMode, setTravelMode] = React.useState('DRIVING');\n  const [origin, setOrigin] = React.useState('');\n  const [destination, setDestination] = React.useState('');\n  const originRef = React.useRef();\n  const destinationRef = React.useRef();\n  const directionsCallback = React.useCallback(res => {\n    console.log(res);\n\n    if (res !== null) {\n      if (res.status === 'OK') {\n        setResponse(res);\n      } else {\n        console.log('response: ', res);\n      }\n    }\n  }, []);\n  const checkDriving = React.useCallback(({\n    target: {\n      checked\n    }\n  }) => {\n    checked && setTravelMode('DRIVING');\n  }, []);\n  const checkBicycling = React.useCallback(({\n    target: {\n      checked\n    }\n  }) => {\n    checked && setTravelMode('BICYCLING');\n  }, []);\n  const checkTransit = React.useCallback(({\n    target: {\n      checked\n    }\n  }) => {\n    checked && setTravelMode('TRANSIT');\n  }, []);\n  const checkWalking = React.useCallback(({\n    target: {\n      checked\n    }\n  }) => {\n    checked && setTravelMode('WALKING');\n  }, []);\n  const onClick = React.useCallback(() => {\n    if (originRef.current.value !== '' && destinationRef.current.value !== '') {\n      setOrigin(originRef.current.value);\n      setDestination(destinationRef.current.value);\n    }\n  }, []);\n  const onMapClick = React.useCallback((...args) => {\n    console.log('onClick args: ', args);\n  }, []);\n  const directionsServiceOptions = React.useMemo(() => {\n    return {\n      destination: destination,\n      origin: origin,\n      travelMode: travelMode\n    };\n  }, []);\n  const directionsRendererOptions = React.useMemo(() => {\n    return {\n      directions: response\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [destination !== '' && origin !== '' && /*#__PURE__*/_jsxDEV(DirectionsService, {\n      options: directionsServiceOptions,\n      callback: directionsCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this), response !== null && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      options: directionsRendererOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ExampleDirections, \"FvA5FwEqSwRDDtdTxW6+8bhKji8=\");\n\n_c = ExampleDirections;\nexport default _c2 = /*#__PURE__*/React.memo(ExampleDirections);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExampleDirections\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/DirectionsRender/DirectionsRender.jsx"],"names":["React","PropTypes","GoogleMap","DirectionsService","DirectionsRenderer","center","lat","lng","ExampleDirections","styles","response","setResponse","useState","travelMode","setTravelMode","origin","setOrigin","destination","setDestination","originRef","useRef","destinationRef","directionsCallback","useCallback","res","console","log","status","checkDriving","target","checked","checkBicycling","checkTransit","checkWalking","onClick","current","value","onMapClick","args","directionsServiceOptions","useMemo","directionsRendererOptions","directions","memo"],"mappings":"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","sourcesContent":["\n\nimport * as React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    GoogleMap,\n    DirectionsService,\n    DirectionsRenderer,\n} from '@react-google-maps/api'\n\n\n\nconst center = {\n    lat: 0,\n    lng: -180,\n}\n\nfunction ExampleDirections({ styles }) {\n    const [response, setResponse] = React.useState(null)\n    const [travelMode, setTravelMode] = React.useState('DRIVING')\n    const [origin, setOrigin] = React.useState('')\n    const [destination, setDestination] = React.useState('')\n    const originRef = React.useRef()\n    const destinationRef = React.useRef()\n\n    const directionsCallback = React.useCallback((res) => {\n        console.log(res)\n\n        if (res !== null) {\n            if (res.status === 'OK') {\n                setResponse(res)\n            } else {\n                console.log('response: ', res)\n            }\n        }\n    }, [])\n\n    const checkDriving = React.useCallback(({ target: { checked } }) => {\n        checked && setTravelMode('DRIVING')\n    }, [])\n\n    const checkBicycling = React.useCallback(({ target: { checked } }) => {\n        checked && setTravelMode('BICYCLING')\n    }, [])\n\n    const checkTransit = React.useCallback(({ target: { checked } }) => {\n        checked && setTravelMode('TRANSIT')\n    }, [])\n\n    const checkWalking = React.useCallback(({ target: { checked } }) => {\n        checked && setTravelMode('WALKING')\n    }, [])\n\n    const onClick = React.useCallback(() => {\n        if (originRef.current.value !== '' && destinationRef.current.value !== '') {\n            setOrigin(originRef.current.value)\n            setDestination(destinationRef.current.value)\n        }\n    }, [])\n\n    const onMapClick = React.useCallback((...args) => {\n        console.log('onClick args: ', args)\n    }, [])\n\n    const directionsServiceOptions = React.useMemo(() => {\n        return {\n            destination: destination,\n            origin: origin,\n            travelMode: travelMode,\n        }\n    }, [])\n\n    const directionsRendererOptions = React.useMemo(() => {\n        return {\n            directions: response,\n        }\n    }, [])\n\n    return (\n\n            <div>\n                    {destination !== '' && origin !== '' && (\n                        <DirectionsService\n                            options={directionsServiceOptions}\n                            callback={directionsCallback}\n                        />\n                    )}\n\n                    {response !== null && (\n                        <DirectionsRenderer options={directionsRendererOptions} />\n                    )}\n            </div>\n    )\n}\n\n\n\nexport default React.memo(ExampleDirections)\n"]},"metadata":{},"sourceType":"module"}