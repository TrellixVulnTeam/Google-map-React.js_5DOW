{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './map.scss';\nimport { GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  minWidth: '100vh',\n  height: '100vh'\n};\n\nfunction MyMapComponent() {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const [id, setId] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  const [drawMarker, setDrawMarker] = useState(false); //\n  // const addMarker = (coords) => {\n  //     setId((id)=>id+1);\n  //     console.log(id)\n  //     console.log(markers)\n  //     setMarkers((markers) => markers.concat([{coords, id}]))\n  //\n  //\n  // }\n\n  console.log(myMap);\n\n  function placeMarkerAndPanTo(coords, map) {\n    console.log(coords);\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: coords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  }\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: e => {\n        setDrawMarker(() => !drawMarker);\n        console.log(e.latLng.toJSON());\n        {\n          drawMarker === true ? setMarkers(placeMarkerAndPanTo(e.latLng.toJSON(), myMap)) : alert('хуй тебе');\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n\n  console.log(drawMarker);\n  return isLoaded ? renderMap() : null;\n}\n\n_s(MyMapComponent, \"6IvrhQjix1MhL9ozIwOg2G8ZbJs=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MyMapComponent;\nexport default MyMapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","GoogleMap","LoadScript","Marker","useGoogleMap","useLoadScript","PolygonMkad","containerStyle","minWidth","height","MyMapComponent","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","isLoaded","googleMapsApiKey","id","setId","markers","setMarkers","drawMarker","setDrawMarker","console","log","placeMarkerAndPanTo","coords","map","renderMap","e","latLng","toJSON","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAIA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,YAAvC,EAAqDC,aAArD,QAAyE,wBAAzE;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,OADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;;AAMA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AAACe,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBlB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEmB,IAAAA;AAAF,MAAed,aAAa,CAAC;AAC/Be,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBtB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAAEuB,OAAF,EAAWC,UAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEyB,UAAF,EAAcC,aAAd,IAAgC1B,QAAQ,CAAC,KAAD,CAA9C,CAZsB,CAatB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA2B,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AAEA,WAASkB,mBAAT,CAA6BC,MAA7B,EAAqCC,GAArC,EAA0C;AACtCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAEA,wBAAQ,QAAC,MAAD;AACJ,MAAA,QAAQ,EAAIA;AADR;AAAA;AAAA;AAAA;AAAA,YAAR;AAIH;;AAGD,QAAME,SAAS,GAAG,mBACd;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAEnB,MADZ;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,iBAAiB,EAAEV,cAHvB;AAII,MAAA,MAAM,EAAEwB,GAAG,IAAInB,QAAQ,CAACmB,GAAD,CAJ3B;AAKI,MAAA,OAAO,EAAGE,CAAD,IAAM;AACXP,QAAAA,aAAa,CAAC,MAAI,CAACD,UAAN,CAAb;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,MAAT,EAAZ;AACA;AAAEV,UAAAA,UAAU,KAAK,IAAhB,GAAwBD,UAAU,CAACK,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,MAAT,EAAD,EAAmBxB,KAAnB,CAApB,CAAlC,GAAmFyB,KAAK,CAAC,UAAD,CAAxF;AAAsG;AAEzG,OAVN;AAAA,6BAaI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAqBAT,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAGA,SAAON,QAAQ,GAAGa,SAAS,EAAZ,GAAiB,IAAhC;AAEH;;GA7DQtB,c;UAMgBL,a;;;KANhBK,c;AAiET,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\n\n\n\nimport './map.scss'\n\nimport {GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript} from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\n\nconst containerStyle = {\n    minWidth: '100vh',\n    height: '100vh'\n}\n\n\nfunction MyMapComponent() {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const [ id, setId ] = useState(0);\n    const [ markers, setMarkers ] = useState([]);\n    const [ drawMarker, setDrawMarker ] = useState(false);\n    //\n    // const addMarker = (coords) => {\n    //     setId((id)=>id+1);\n    //     console.log(id)\n    //     console.log(markers)\n    //     setMarkers((markers) => markers.concat([{coords, id}]))\n    //\n    //\n    // }\n\n    console.log(myMap)\n\n    function placeMarkerAndPanTo(coords, map) {\n        console.log(coords)\n\n        return (<Marker\n            position = {coords}\n        />)\n\n    }\n\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={(e)=> {\n                    setDrawMarker(()=>!drawMarker);\n                    console.log(e.latLng.toJSON())\n                    {(drawMarker === true) ? setMarkers(placeMarkerAndPanTo(e.latLng.toJSON(),myMap)) : alert('хуй тебе') }\n\n                 }\n                }\n            >\n                <PolygonMkad/>\n\n            </GoogleMap>\n        </div>\n)\n\n    console.log(drawMarker)\n\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default MyMapComponent\n\n"]},"metadata":{},"sourceType":"module"}