{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/MapComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapXX = () => {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 29.972065,\n    lng: -90.111533\n  });\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const [id, setId] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  const [drawMarker, setDrawMarker] = useState(false);\n\n  const addMarker = coords => {\n    setId(id => id + 1);\n    setMarkers(markers => markers.concat([{\n      coords,\n      id\n    }]));\n  };\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      height: \"50vh\",\n      width: \"50vw\",\n      margin: \"20px\"\n    },\n    zoom: 10,\n    center: center,\n    onLoad: map => setMyMap(map),\n    onClick: e => drawMarker ? addMarker(e.latLng.toJSON()) : null,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: {\n        backgroundColor: drawMarker ? \"green\" : null\n      },\n      onClick: () => {\n        setDrawMarker(() => !drawMarker);\n      },\n      children: \"ADD & DRAG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setMarkers([]),\n      children: \"CLEAR MAP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), markers ? markers.map(marker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: drawMarker,\n        position: marker.coords,\n        onDragEnd: e => marker.coords = e.latLng.toJSON()\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n};\n\n_s(MapXX, \"viC7jJXLwDDM4EEuhptCnSMLFtA=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MapXX;\nexport default MapXX;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapXX\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/MapComponent.jsx"],"names":["React","useState","GoogleMap","useLoadScript","Marker","MapXX","myMap","setMyMap","center","setCenter","lat","lng","isLoaded","googleMapsApiKey","id","setId","markers","setMarkers","drawMarker","setDrawMarker","addMarker","coords","concat","renderMap","height","width","margin","map","e","latLng","toJSON","backgroundColor","marker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,aAApB,EAAoCC,MAApC,QAAiD,wBAAjD;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAEO,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC;AAAES,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB,GAAD,CAAtC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,aAAa,CAAC;AAC/BU,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAAEe,OAAF,EAAWC,UAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEiB,UAAF,EAAcC,aAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMmB,SAAS,GAAIC,MAAD,IAAY;AAC1BN,IAAAA,KAAK,CAAED,EAAD,IAAMA,EAAE,GAAC,CAAV,CAAL;AACAG,IAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,CAACM,MAAR,CAAe,CAAC;AAACD,MAAAA,MAAD;AAASP,MAAAA;AAAT,KAAD,CAAf,CAAd,CAAV;AACH,GAHD;;AAKA,QAAMS,SAAS,GAAG,mBACd,QAAC,SAAD;AACI,IAAA,iBAAiB,EAAE;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,KAAK,EAAE,MAFQ;AAGfC,MAAAA,MAAM,EAAE;AAHO,KADvB;AAMI,IAAA,IAAI,EAAE,EANV;AAOI,IAAA,MAAM,EAAElB,MAPZ;AAQI,IAAA,MAAM,EAAEmB,GAAG,IAAIpB,QAAQ,CAACoB,GAAD,CAR3B;AASI,IAAA,OAAO,EAAGC,CAAD,IAAMV,UAAU,GAAGE,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,MAAT,EAAD,CAAZ,GAAkC,IAT/D;AAAA,4BAaI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAEb,UAAU,GAAG,OAAH,GAAa;AAAzC,OAFX;AAGI,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,aAAa,CAAC,MAAI,CAACD,UAAN,CAAb;AAA+B,OAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAkBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAE,MAAID,UAAU,CAAC,EAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,EAsBKD,OAAO,GACJA,OAAO,CAACW,GAAR,CAAaK,MAAD,IAAY;AACpB,0BACI,QAAC,MAAD;AAEI,QAAA,SAAS,EAAEd,UAFf;AAGI,QAAA,QAAQ,EAAEc,MAAM,CAACX,MAHrB;AAII,QAAA,SAAS,EAAEO,CAAC,IAAII,MAAM,CAACX,MAAP,GAAgBO,CAAC,CAACC,MAAF,CAASC,MAAT;AAJpC,SACSE,MAAM,CAAClB,EADhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATD,CADI,GAWJ,IAjCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAsCA,SAAOF,QAAQ,GAAGW,SAAS,EAAZ,GAAiB,IAAhC;AACH,CAxDD;;GAAMlB,K;UAImBF,a;;;KAJnBE,K;AA0DN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { GoogleMap, useLoadScript , Marker} from '@react-google-maps/api'\n\n\nconst MapXX = () => {\n    const [ myMap, setMyMap ] = useState(null);\n    const [ center, setCenter ] = useState({ lat: 29.972065, lng: -90.111533 });\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const [ id, setId ] = useState(0);\n    const [ markers, setMarkers ] = useState([]);\n    const [ drawMarker, setDrawMarker ] = useState(false);\n\n    const addMarker = (coords) => {\n        setId((id)=>id+1);\n        setMarkers((markers) => markers.concat([{coords, id}]) )\n    }\n\n    const renderMap = () => (\n        <GoogleMap\n            mapContainerStyle={{\n                height: \"50vh\",\n                width: \"50vw\",\n                margin: \"20px\",\n            }}\n            zoom={10}\n            center={center}\n            onLoad={map => setMyMap(map)}\n            onClick={(e)=> drawMarker ? addMarker(e.latLng.toJSON()) : null}\n\n        >\n\n            <button\n                type=\"button\"\n                style={{backgroundColor: drawMarker ? \"green\" : null}}\n                onClick={()=>{setDrawMarker(()=>!drawMarker)}}\n            >ADD & DRAG</button>\n            <button\n                type=\"button\"\n                onClick={()=>setMarkers([])}\n            >CLEAR MAP</button>\n            {markers ? (\n                markers.map((marker) => {\n                    return (\n                        <Marker\n                            key={marker.id}\n                            draggable={drawMarker}\n                            position={marker.coords}\n                            onDragEnd={e => marker.coords = e.latLng.toJSON()}\n                        />\n                    )\n                })\n            ) : null }\n        </GoogleMap>\n    )\n\n    return isLoaded ? renderMap() : null;\n}\n\nexport default MapXX"]},"metadata":{},"sourceType":"module"}