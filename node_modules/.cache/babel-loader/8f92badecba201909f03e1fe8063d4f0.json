{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './map.scss';\nimport { GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  minWidth: '100vh',\n  height: '100vh'\n};\n\nfunction MyMapComponent() {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const [id, setId] = useState(0);\n  const [markers, setMarkers] = useState([]);\n\n  const initEventListener = () => {};\n\n  useEffect(initEventListener, [myMap]);\n\n  const addMarker = coords => {\n    setId(id => id + 1);\n    setMarkers(markers => markers.concat([{\n      coords,\n      id\n    }]));\n  };\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: e => {\n        setMarkers(addMarker(e.latLng.toJSON()));\n      },\n      children: [/*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), markers ? markers.map(marker => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.coords,\n          onDragEnd: e => marker.coords = e.latLng.toJSON()\n        }, marker.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n}\n\n_s(MyMapComponent, \"mNpJMoNrKgFLEU+mRqUOwKkr2Vk=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MyMapComponent;\nexport default MyMapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","useGoogleMap","useLoadScript","PolygonMkad","containerStyle","minWidth","height","MyMapComponent","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","isLoaded","googleMapsApiKey","id","setId","markers","setMarkers","initEventListener","addMarker","coords","concat","renderMap","map","e","latLng","toJSON","marker"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAIA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,YAAvC,EAAqDC,aAArD,QAAyE,wBAAzE;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,OADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;;AAMA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC;AAACgB,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBnB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEoB,IAAAA;AAAF,MAAed,aAAa,CAAC;AAC/Be,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBvB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAAEwB,OAAF,EAAWC,UAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM0B,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAKAzB,EAAAA,SAAS,CAACyB,iBAAD,EAAoB,CAACd,KAAD,CAApB,CAAT;;AAEA,QAAMe,SAAS,GAAIC,MAAD,IAAY;AAC1BL,IAAAA,KAAK,CAAED,EAAD,IAAMA,EAAE,GAAC,CAAV,CAAL;AACAG,IAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,CAACK,MAAR,CAAe,CAAC;AAACD,MAAAA,MAAD;AAASN,MAAAA;AAAT,KAAD,CAAf,CAAd,CAAV;AACH,GAHD;;AAQA,QAAMQ,SAAS,GAAG,mBACd;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAEhB,MADZ;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,iBAAiB,EAAEV,cAHvB;AAII,MAAA,MAAM,EAAEuB,GAAG,IAAIlB,QAAQ,CAACkB,GAAD,CAJ3B;AAKI,MAAA,OAAO,EAAGC,CAAD,IAAM;AACXP,QAAAA,UAAU,CAACE,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,MAAT,EAAD,CAAV,CAAV;AACF,OAPN;AAAA,8BAUI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWKV,OAAO,GACJA,OAAO,CAACO,GAAR,CAAaI,MAAD,IAAY;AACpB,4BACI,QAAC,MAAD;AAEI,UAAA,QAAQ,EAAEA,MAAM,CAACP,MAFrB;AAGI,UAAA,SAAS,EAAEI,CAAC,IAAIG,MAAM,CAACP,MAAP,GAAgBI,CAAC,CAACC,MAAF,CAASC,MAAT;AAHpC,WACSC,MAAM,CAACb,EADhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD,CADI,GAUJ,IArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AA+BA,SAAOF,QAAQ,GAAGU,SAAS,EAAZ,GAAiB,IAAhC;AAEH;;GA7DQnB,c;UAMgBL,a;;;KANhBK,c;AAiET,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport {useState, useEffect} from 'react'\n\n\n\nimport './map.scss'\n\nimport {GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript} from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\n\nconst containerStyle = {\n    minWidth: '100vh',\n    height: '100vh'\n}\n\n\nfunction MyMapComponent() {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const [ id, setId ] = useState(0);\n    const [ markers, setMarkers ] = useState([]);\n\n    const initEventListener = () => {\n\n    }\n\n\n    useEffect(initEventListener, [myMap])\n\n    const addMarker = (coords) => {\n        setId((id)=>id+1);\n        setMarkers((markers) => markers.concat([{coords, id}]))\n    }\n\n\n\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={(e)=> {\n                    setMarkers(addMarker(e.latLng.toJSON()))\n                 }\n                }\n            >\n                <PolygonMkad/>\n                {markers ? (\n                    markers.map((marker) => {\n                        return (\n                            <Marker\n                                key={marker.id}\n                                position={marker.coords}\n                                onDragEnd={e => marker.coords = e.latLng.toJSON()}\n                            />\n                        )\n                    })\n                ) : null }\n            </GoogleMap>\n        </div>\n)\n\n\n\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default MyMapComponent\n\n"]},"metadata":{},"sourceType":"module"}