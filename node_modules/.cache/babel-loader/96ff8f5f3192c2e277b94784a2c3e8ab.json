{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './map.scss';\nimport { GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  minWidth: '100vh',\n  height: '100vh'\n};\n\nfunction MyMapComponent() {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const [id, setId] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  const [drawMarker, setDrawMarker] = useState(false);\n\n  const addMarker = coords => {\n    setId(id => id + 1);\n    console.log(id);\n    console.log(markers);\n    setMarkers(markers => markers.concat([{\n      coords,\n      id\n    }]));\n    console.log(markers);\n  };\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: e => {\n        setDrawMarker(() => !drawMarker);\n        console.log(markers);\n        setMarkers(() => drawMarker ? markers.concat(e.latLng.toJSON()) : null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), markers ? markers.map(marker => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          draggable: drawMarker,\n          position: marker.coords,\n          onDragEnd: e => marker.coords = e.latLng.toJSON()\n        }, marker.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n}\n\n_s(MyMapComponent, \"6IvrhQjix1MhL9ozIwOg2G8ZbJs=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = MyMapComponent;\nexport default MyMapComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMapComponent\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","GoogleMap","LoadScript","Marker","useGoogleMap","useLoadScript","PolygonMkad","containerStyle","minWidth","height","MyMapComponent","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","isLoaded","googleMapsApiKey","id","setId","markers","setMarkers","drawMarker","setDrawMarker","addMarker","coords","console","log","concat","renderMap","map","e","latLng","toJSON","marker"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\n\n\n\nimport './map.scss'\n\nimport {GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript} from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\n\nconst containerStyle = {\n    minWidth: '100vh',\n    height: '100vh'\n}\n\n\nfunction MyMapComponent() {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const [ id, setId ] = useState(0);\n    const [ markers, setMarkers ] = useState([]);\n    const [ drawMarker, setDrawMarker ] = useState(false);\n\n    const addMarker = (coords) => {\n        setId((id)=>id+1);\n        console.log(id)\n        console.log(markers)\n        setMarkers((markers) => markers.concat([{coords, id}]))\n        console.log(markers)\n\n    }\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={(e)=> {\n                    setDrawMarker(()=>!drawMarker);\n                    console.log(markers)\n                    setMarkers(() => drawMarker ?\n\n                        markers.concat(e.latLng.toJSON())\n                        : null)\n                 }\n                }\n\n            >\n                <PolygonMkad/>\n                {markers ? (\n                    markers.map((marker) => {\n                        return (\n                            <Marker\n                                key={marker.id}\n                                draggable={drawMarker}\n                                position={marker.coords}\n                                onDragEnd={e => marker.coords = e.latLng.toJSON()}\n                            />\n                        )\n                    })\n                ) : null }\n            </GoogleMap>\n        </div>\n)\n\n\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default MyMapComponent\n\n"]},"metadata":{},"sourceType":"module"}