{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useCallback } from 'react';\nimport './map.scss';\nimport { GoogleMap, Marker, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  Width: '100wh',\n  height: '100vh'\n};\n\nfunction Map() {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const onMapClick = useCallback();\n  const [markers, setMarkers] = useState([]);\n  let cord;\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: e => {\n        cord = e.latLng.toJSON();\n        setMarkers(markers => /*#__PURE__*/_jsxDEV(Marker, {\n          position: cord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this));\n      },\n      children: [/*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), markers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n}\n\n_s(Map, \"Ze2W6dJwndBC0x5HxpDMC5EUYec=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","useCallback","GoogleMap","Marker","useLoadScript","PolygonMkad","containerStyle","Width","height","Map","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","isLoaded","googleMapsApiKey","onMapClick","markers","setMarkers","cord","renderMap","map","e","latLng","toJSON"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,aAA3B,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;;AAMA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AAACc,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBjB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEkB,IAAAA;AAAF,MAAed,aAAa,CAAC;AAC/Be,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAMC,UAAU,GAAGnB,WAAW,EAA9B;AAEA,QAAM,CAAEoB,OAAF,EAAWC,UAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAKuB,IAAL;;AAGA,QAAMC,SAAS,GAAG,mBACd;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAEZ,MADZ;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,iBAAiB,EAAEV,cAHvB;AAII,MAAA,MAAM,EAAEmB,GAAG,IAAId,QAAQ,CAACc,GAAD,CAJ3B;AAKI,MAAA,OAAO,EAAGC,CAAD,IAAM;AACXH,QAAAA,IAAI,GAAGG,CAAC,CAACC,MAAF,CAASC,MAAT,EAAP;AACAN,QAAAA,UAAU,CAACD,OAAO,iBACd,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADM,CAAV;AAIF,OAXN;AAAA,8BAcI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAdJ,EAeIF,OAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAwBA,SAAOH,QAAQ,GAAGM,SAAS,EAAZ,GAAiB,IAAhC;AAEH;;GA3CQf,G;UAMgBL,a;;;KANhBK,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {useState, useCallback} from 'react'\n\nimport './map.scss'\n\nimport {GoogleMap, Marker, useLoadScript} from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\n\nconst containerStyle = {\n    Width: '100wh',\n    height: '100vh'\n}\n\n\nfunction Map() {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const onMapClick = useCallback()\n\n    const [ markers, setMarkers ] = useState([]);\n\n    let  cord\n\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={(e)=> {\n                    cord = e.latLng.toJSON()\n                    setMarkers(markers => (\n                        <Marker position={cord}/>\n                        )\n                    )\n                 }\n                }\n            >\n                <PolygonMkad/>\n               {markers}\n            </GoogleMap>\n        </div>\n)\n\n\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default Map\n\n\n"]},"metadata":{},"sourceType":"module"}