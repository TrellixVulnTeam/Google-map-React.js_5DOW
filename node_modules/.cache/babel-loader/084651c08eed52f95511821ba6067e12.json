{"ast":null,"code":"var _jsxFileName = \"/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './map.scss';\nimport { GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript } from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  minWidth: '100vh',\n  height: '100vh'\n};\nconst google = window.google;\n\nfunction Map() {\n  _s();\n\n  const [myMap, setMyMap] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 55.7522200,\n    lng: 37.6155600\n  });\n  const [zoom, setZoom] = useState(10);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\"\n  });\n  const [id, setId] = useState(0);\n  const [markers, setMarkers] = useState([]);\n  let cord;\n\n  const renderMap = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      center: center,\n      zoom: zoom,\n      mapContainerStyle: containerStyle,\n      onLoad: map => setMyMap(map),\n      onClick: e => {\n        console.log(e);\n        cord = e.latLng.toJSON();\n        setMarkers(markers => /*#__PURE__*/_jsxDEV(Marker, {\n          position: cord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this));\n      },\n      children: [/*#__PURE__*/_jsxDEV(PolygonMkad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), markers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n\n  return isLoaded ? renderMap() : null;\n}\n\n_s(Map, \"APFqBnwlMYJq8vUHvO+07ZXRPx8=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jullmi/Documents/development/map/src/components/Map/Map.jsx"],"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","useGoogleMap","useLoadScript","PolygonMkad","containerStyle","minWidth","height","google","window","Map","myMap","setMyMap","center","setCenter","lat","lng","zoom","setZoom","isLoaded","googleMapsApiKey","id","setId","markers","setMarkers","cord","renderMap","map","e","console","log","latLng","toJSON"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAIA,OAAO,YAAP;AAEA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,YAAvC,EAAqDC,aAArD,QAAyE,wBAAzE;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,OADS;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;AAKA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AAEX,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC;AAACkB,IAAAA,GAAG,EAAE,UAAN;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApC;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBrB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAehB,aAAa,CAAC;AAC/BiB,IAAAA,gBAAgB,EAAE;AADa,GAAD,CAAlC;AAIA,QAAM,CAAEC,EAAF,EAAMC,KAAN,IAAgBzB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAAE0B,OAAF,EAAWC,UAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AAOA,MAAK4B,IAAL;;AAGA,QAAMC,SAAS,GAAG,mBACd;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,MAAM,EAAEb,MADZ;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,iBAAiB,EAAEZ,cAHvB;AAII,MAAA,MAAM,EAAEsB,GAAG,IAAIf,QAAQ,CAACe,GAAD,CAJ3B;AAKI,MAAA,OAAO,EAAGC,CAAD,IAAM;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAH,QAAAA,IAAI,GAAGG,CAAC,CAACG,MAAF,CAASC,MAAT,EAAP;AACAR,QAAAA,UAAU,CAACD,OAAO,iBACd,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADM,CAAV;AAKF,OAbN;AAAA,8BAgBI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAiBIF,OAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AA2BA,SAAOJ,QAAQ,GAAGO,SAAS,EAAZ,GAAiB,IAAhC;AAEH;;GAlDQhB,G;UAMgBP,a;;;KANhBO,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport {useState, useEffect} from 'react'\n\n\n\nimport './map.scss'\n\nimport {GoogleMap, LoadScript, Marker, useGoogleMap, useLoadScript} from '@react-google-maps/api';\nimport PolygonMkad from \"../PolygonMkad/Polygon\";\n\nconst containerStyle = {\n    minWidth: '100vh',\n    height: '100vh'\n}\n\nconst google = window.google\n\nfunction Map() {\n\n    const [ myMap, setMyMap ] = useState(null);\n    const [center, setCenter] = useState({lat: 55.7522200, lng: 37.6155600});\n    const [zoom,setZoom] = useState(10);\n\n    const { isLoaded } = useLoadScript({\n        googleMapsApiKey: \"AIzaSyBYEey3dAT7X6YcANl4oNHBa5V-4KS2cGA\",\n    });\n\n    const [ id, setId ] = useState(0);\n    const [ markers, setMarkers ] = useState([]);\n\n\n\n\n\n\n    let  cord\n\n\n    const renderMap = () => (\n        <div>\n            <GoogleMap\n                center={center}\n                zoom={zoom}\n                mapContainerStyle={containerStyle}\n                onLoad={map => setMyMap(map)}\n                onClick={(e)=> {\n                    console.log(e)\n                    cord = e.latLng.toJSON()\n                    setMarkers(markers => (\n                        <Marker position={cord}/>\n                    )\n\n                )\n                 }\n                }\n            >\n                <PolygonMkad/>\n               {markers}\n            </GoogleMap>\n        </div>\n)\n\n\n\n\n    return isLoaded ? renderMap() : null;\n\n}\n\n\n\nexport default Map\n\n"]},"metadata":{},"sourceType":"module"}